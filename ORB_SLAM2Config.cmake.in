# ORB_SLAM2Config.cmake.in
# Config file for ORB_SLAM2, generated by CMake

# Set the installation prefix
set(ORB_SLAM2_INSTALL_PREFIX "@CMAKE_INSTALL_PREFIX@")

# Find the installed libraries
# Assumes DBoW2 and g2o are installed in the same lib directory
find_library(ORB_SLAM2_LIBRARY NAMES ORB_SLAM2 libORB_SLAM2
             PATHS ${ORB_SLAM2_INSTALL_PREFIX}
             PATH_SUFFIXES lib)

find_library(DBOW2_LIBRARY NAMES DBoW2 libDBoW2
             PATHS ${ORB_SLAM2_INSTALL_PREFIX}
             PATH_SUFFIXES lib)

find_library(G2O_LIBRARY NAMES g2o libg2o
             PATHS ${ORB_SLAM2_INSTALL_PREFIX}
             PATH_SUFFIXES lib)

# Find the installed headers
find_path(ORB_SLAM2_INCLUDE_DIR ORB_SLAM2/System.h
          PATHS ${ORB_SLAM2_INSTALL_PREFIX}
          PATH_SUFFIXES include)

# Check if all required components were found
include(FindPackageHandleStandardArgs)
find_package_handle_standard_args(ORB_SLAM2  DEFAULT_MSG
                                  ORB_SLAM2_LIBRARY ORB_SLAM2_INCLUDE_DIR
                                  DBOW2_LIBRARY G2O_LIBRARY)

# Set the variables expected by consuming projects
if(ORB_SLAM2_FOUND)
  set(ORB_SLAM2_INCLUDE_DIRS ${ORB_SLAM2_INCLUDE_DIR})
  # Combine ORB_SLAM2, DBoW2, and g2o into the libraries variable
  set(ORB_SLAM2_LIBRARIES ${ORB_SLAM2_LIBRARY} ${DBOW2_LIBRARY} ${G2O_LIBRARY})
  # Note: This config file does NOT handle finding ORB_SLAM2's dependencies
  # like OpenCV, Eigen3, Pangolin. The consuming project must find those.
endif()

mark_as_advanced(ORB_SLAM2_LIBRARY ORB_SLAM2_INCLUDE_DIR DBOW2_LIBRARY G2O_LIBRARY)